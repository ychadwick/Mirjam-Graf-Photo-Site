<?php

/**
 * BasePhoto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property varchar $title
 * @property varchar $image
 * @property varchar $caption
 * @property integer $category_id
 * @property integer $sort_order
 * @property Category $Category
 * 
 * @method varchar  getTitle()       Returns the current record's "title" value
 * @method varchar  getImage()       Returns the current record's "image" value
 * @method varchar  getCaption()     Returns the current record's "caption" value
 * @method integer  getCategoryId()  Returns the current record's "category_id" value
 * @method integer  getSortOrder()   Returns the current record's "sort_order" value
 * @method Category getCategory()    Returns the current record's "Category" value
 * @method Photo    setTitle()       Sets the current record's "title" value
 * @method Photo    setImage()       Sets the current record's "image" value
 * @method Photo    setCaption()     Sets the current record's "caption" value
 * @method Photo    setCategoryId()  Sets the current record's "category_id" value
 * @method Photo    setSortOrder()   Sets the current record's "sort_order" value
 * @method Photo    setCategory()    Sets the current record's "Category" value
 * 
 * @package    PhotoSite
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePhoto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('photo');
        $this->hasColumn('title', 'varchar', 255, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('image', 'varchar', 255, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('caption', 'varchar', 3000, array(
             'type' => 'varchar',
             'length' => 3000,
             ));
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('sort_order', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}